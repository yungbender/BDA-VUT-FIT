version: '3'

services:
  nodes_database:
    container_name: nodes_db
    build:
      context: .
      dockerfile: "./db/Dockerfile"
    environment:
      - POSTGRES_PASSWORD=superuser_pwd
      - POSTGRES_DB=nodes
    volumes:
      - nodes_db_volume:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"

  nodes_api:
    container_name: nodes_api
    entrypoint: ["nodes", "api"]
    build:
      context: .
      dockerfile: "./Dockerfile"
    environment:
      - DB_HOST=nodes_database
      - DB_NAME=nodes
      - DB_USER=nodes_manager
      - DB_USER_PWD=nodes_manager_pwd
      - DB_PORT=5432
      - GIN_MODE=release
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - nodes_database

  nodes_crawler:
    container_name: nodes_crawler
    entrypoint: ["/bin/sh", "-c", "nodes crawler && crond -f -l 8"]
    build:
      context: .
      dockerfile: "./Dockerfile"
    environment:
      - DB_HOST=nodes_database
      - DB_NAME=nodes
      - DB_USER=nodes_manager
      - DB_USER_PWD=nodes_manager_pwd
      - DB_PORT=5432
    depends_on:
      - nodes_database

  nodes_pinger:
    container_name: nodes_pinger
    entrypoint: ["nodes", "pinger"]
    build:
      context: .
      dockerfile: "./Dockerfile"
    environment:
      - DB_HOST=nodes_database
      - DB_NAME=nodes
      - DB_USER=nodes_manager
      - DB_USER_PWD=nodes_manager_pwd
      - DB_PORT=5432
    depends_on:
      - nodes_database

volumes:
  nodes_db_volume:
